ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
?points
points(seq(from = 1, to = njCounter, by = 2, pennDiffSorted)
points(seq(from = 1, to = njCounter, by = 2), pennDiffSorted)
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = 2), pennDiffSorted)
points(seq(from = 1, to = njCounter, by = njDiffSorted/pennDiffSorted), pennDiffSorted)
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njDiffSorted/pennDiffSorted), pennDiffSorted)
?seq
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted)
segments(x0 = 0, y0 = 0, x1 = njCounter, y1 = 0)
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, col= "red")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 1, col= "red")
#bootstrap
k <- 1000
priorVec <- numeric(k)
postVec <- numeric(k)
for (i in (1:k)) {
priorVec[i] <- mean(sample(prior_gas_values, k, replace = TRUE))
postVec[i] <- mean(sample(post_gas_values, k, replace = TRUE))
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 1, col= "red")
segments(x0 = 0, y0 = 0, x1 = njCounter, y1 = 0)
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue is", blue_dataset))
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue is", njDiffSorted))
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue represents ", blue_name , " stores and red represents ", red_name, "stores."))
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue represents ", blue_name , " stores and red represents ", red_name, "stores."))
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue represents", blue_name , "stores and red represents", red_name, "stores."))
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
#organising the data
setwd("/Users/gijs/Desktop/Universiteit Leiden/Programmas/SamCollab/R-collab/Inleveropdracht 3")
load("FastFood.Rdata") #loading the data
pennCounter <- 0 #amount of rows that contains information about Pennsylvania
njCounter <- 0 #amount of rows that contains information about New Jersey
dataFTE <- list(pennBefore = numeric (0), pennAfter = numeric (0), pennDiff = numeric(0),
njBefore = numeric (0), njAfter = numeric (0), njDiff = numeric(0))
for(i in 1:length(FastFood$NewJersey)){#iterating over the list
if (FastFood$NewJersey[i] == 0){#information about a Pennsylvania store
pennCounter = pennCounter + 1
dataFTE$pennBefore <- c(dataFTE$pennBefore, FastFood$FTEbefore[i])
dataFTE$pennAfter <- c(dataFTE$pennAfter, FastFood$FTEafter[i])
dataFTE$pennDiff <- c(dataFTE$pennDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
else{#information about a New Jersey store
njCounter = njCounter + 1
dataFTE$njBefore <- c(dataFTE$njBefore, FastFood$FTEbefore[i])
dataFTE$njAfter <- c(dataFTE$njAfter, FastFood$FTEafter[i])
dataFTE$njDiff <- c(dataFTE$njDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
}
#an element in our dataset can be accessed by dataFTE$datatype[rownumber]
#plot for the Pennsylvania data
max_penn <- max(dataFTE$pennBefore, dataFTE$pennAfter)
sort_index_penn <- order(dataFTE$pennDiff)
pennBeforeSorted <- dataFTE$pennBefore[sort_index_penn]
pennAfterSorted <- dataFTE$pennAfter[sort_index_penn]
pennDiffSorted <- dataFTE$pennDiff[sort_index_penn] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, pennCounter),
ylim = c(0, max_penn),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(pennBeforeSorted, pch = 16, lwd = 1, col = "red")
points(pennAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:pennCounter), y0 = pennBeforeSorted, x1 = (1:pennCounter), y1 = pennAfterSorted, col = "black", length = 0.07)
#plot for the New Jersey data
max_nj <- max(dataFTE$njBefore, dataFTE$njAfter)
sort_index_nj <- order(dataFTE$njDiff)
njBeforeSorted <- dataFTE$njBefore[sort_index_nj]
njAfterSorted <- dataFTE$njAfter[sort_index_nj]
njDiffSorted <- dataFTE$njDiff[sort_index_nj] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(0, max_nj),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for New Jersey FTE comparison, sorted")
points(njBeforeSorted, pch = 16, lwd = 1, col = "red")
points(njAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:njCounter), y0 = njBeforeSorted, x1 = (1:njCounter), y1 = njAfterSorted, col = "black", length = 0.07)
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = paste("Plot where blue represents", blue_name , "stores and red represents", red_name, "stores."))
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
par(mfrow=c(1, 2))
#plot for the Pennsylvania data
max_penn <- max(dataFTE$pennBefore, dataFTE$pennAfter)
sort_index_penn <- order(dataFTE$pennDiff)
pennBeforeSorted <- dataFTE$pennBefore[sort_index_penn]
pennAfterSorted <- dataFTE$pennAfter[sort_index_penn]
pennDiffSorted <- dataFTE$pennDiff[sort_index_penn] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, pennCounter),
ylim = c(0, max_penn),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(pennBeforeSorted, pch = 16, lwd = 1, col = "red")
points(pennAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:pennCounter), y0 = pennBeforeSorted, x1 = (1:pennCounter), y1 = pennAfterSorted, col = "black", length = 0.07)
#plot for the New Jersey data
max_nj <- max(dataFTE$njBefore, dataFTE$njAfter)
sort_index_nj <- order(dataFTE$njDiff)
njBeforeSorted <- dataFTE$njBefore[sort_index_nj]
njAfterSorted <- dataFTE$njAfter[sort_index_nj]
njDiffSorted <- dataFTE$njDiff[sort_index_nj] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(0, max_nj),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for New Jersey FTE comparison, sorted")
points(njBeforeSorted, pch = 16, lwd = 1, col = "red")
points(njAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:njCounter), y0 = njBeforeSorted, x1 = (1:njCounter), y1 = njAfterSorted, col = "black", length = 0.07)
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for smaller dataset)",
ylab = "FTE",
main = paste("Plot where blue represents", blue_name , "stores and red represents", red_name, "stores."))
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
#organising the data
setwd("/Users/gijs/Desktop/Universiteit Leiden/Programmas/SamCollab/R-collab/Inleveropdracht 3")
load("FastFood.Rdata") #loading the data
pennCounter <- 0 #amount of rows that contains information about Pennsylvania
njCounter <- 0 #amount of rows that contains information about New Jersey
dataFTE <- list(pennBefore = numeric (0), pennAfter = numeric (0), pennDiff = numeric(0),
njBefore = numeric (0), njAfter = numeric (0), njDiff = numeric(0))
for(i in 1:length(FastFood$NewJersey)){#iterating over the list
if (FastFood$NewJersey[i] == 0){#information about a Pennsylvania store
pennCounter = pennCounter + 1
dataFTE$pennBefore <- c(dataFTE$pennBefore, FastFood$FTEbefore[i])
dataFTE$pennAfter <- c(dataFTE$pennAfter, FastFood$FTEafter[i])
dataFTE$pennDiff <- c(dataFTE$pennDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
else{#information about a New Jersey store
njCounter = njCounter + 1
dataFTE$njBefore <- c(dataFTE$njBefore, FastFood$FTEbefore[i])
dataFTE$njAfter <- c(dataFTE$njAfter, FastFood$FTEafter[i])
dataFTE$njDiff <- c(dataFTE$njDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
}
#an element in our dataset can be accessed by dataFTE$datatype[rownumber]
# Chunk 3
#plot for the Pennsylvania data
max_penn <- max(dataFTE$pennBefore, dataFTE$pennAfter)
sort_index_penn <- order(dataFTE$pennDiff)
pennBeforeSorted <- dataFTE$pennBefore[sort_index_penn]
pennAfterSorted <- dataFTE$pennAfter[sort_index_penn]
pennDiffSorted <- dataFTE$pennDiff[sort_index_penn] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, pennCounter),
ylim = c(0, max_penn),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(pennBeforeSorted, pch = 16, lwd = 1, col = "red")
points(pennAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:pennCounter), y0 = pennBeforeSorted, x1 = (1:pennCounter), y1 = pennAfterSorted, col = "black", length = 0.07)
#plot for the New Jersey data
max_nj <- max(dataFTE$njBefore, dataFTE$njAfter)
sort_index_nj <- order(dataFTE$njDiff)
njBeforeSorted <- dataFTE$njBefore[sort_index_nj]
njAfterSorted <- dataFTE$njAfter[sort_index_nj]
njDiffSorted <- dataFTE$njDiff[sort_index_nj] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(0, max_nj),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for New Jersey FTE comparison, sorted")
points(njBeforeSorted, pch = 16, lwd = 1, col = "red")
points(njAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:njCounter), y0 = njBeforeSorted, x1 = (1:njCounter), y1 = njAfterSorted, col = "black", length = 0.07)
# Chunk 4
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for smaller dataset)",
ylab = "FTE",
main = paste("Plot where blue represents", blue_name , "\n stores and red represents", red_name, "stores."))
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
#organising the data
setwd("/Users/gijs/Desktop/Universiteit Leiden/Programmas/SamCollab/R-collab/Inleveropdracht 3")
load("FastFood.Rdata") #loading the data
pennCounter <- 0 #amount of rows that contains information about Pennsylvania
njCounter <- 0 #amount of rows that contains information about New Jersey
dataFTE <- list(pennBefore = numeric (0), pennAfter = numeric (0), pennDiff = numeric(0),
njBefore = numeric (0), njAfter = numeric (0), njDiff = numeric(0))
for(i in 1:length(FastFood$NewJersey)){#iterating over the list
if (FastFood$NewJersey[i] == 0){#information about a Pennsylvania store
pennCounter = pennCounter + 1
dataFTE$pennBefore <- c(dataFTE$pennBefore, FastFood$FTEbefore[i])
dataFTE$pennAfter <- c(dataFTE$pennAfter, FastFood$FTEafter[i])
dataFTE$pennDiff <- c(dataFTE$pennDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
else{#information about a New Jersey store
njCounter = njCounter + 1
dataFTE$njBefore <- c(dataFTE$njBefore, FastFood$FTEbefore[i])
dataFTE$njAfter <- c(dataFTE$njAfter, FastFood$FTEafter[i])
dataFTE$njDiff <- c(dataFTE$njDiff, FastFood$FTEafter[i] - FastFood$FTEbefore[i])
}
}
#an element in our dataset can be accessed by dataFTE$datatype[rownumber]
# Chunk 3
#plot for the Pennsylvania data
max_penn <- max(dataFTE$pennBefore, dataFTE$pennAfter)
sort_index_penn <- order(dataFTE$pennDiff)
pennBeforeSorted <- dataFTE$pennBefore[sort_index_penn]
pennAfterSorted <- dataFTE$pennAfter[sort_index_penn]
pennDiffSorted <- dataFTE$pennDiff[sort_index_penn] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, pennCounter),
ylim = c(0, max_penn),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for Pennsylvania FTE comparison, sorted")
points(pennBeforeSorted, pch = 16, lwd = 1, col = "red")
points(pennAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:pennCounter), y0 = pennBeforeSorted, x1 = (1:pennCounter), y1 = pennAfterSorted, col = "black", length = 0.07)
#plot for the New Jersey data
max_nj <- max(dataFTE$njBefore, dataFTE$njAfter)
sort_index_nj <- order(dataFTE$njDiff)
njBeforeSorted <- dataFTE$njBefore[sort_index_nj]
njAfterSorted <- dataFTE$njAfter[sort_index_nj]
njDiffSorted <- dataFTE$njDiff[sort_index_nj] #we also sort the differences to say consistent
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(0, max_nj),
pch = 16,
xlab = "Store",
ylab = "FTE",
main = "Plot for New Jersey FTE comparison, sorted")
points(njBeforeSorted, pch = 16, lwd = 1, col = "red")
points(njAfterSorted, pch = 16, lwd = 1, col = "blue")
arrows(x0 = (1:njCounter), y0 = njBeforeSorted, x1 = (1:njCounter), y1 = njAfterSorted, col = "black", length = 0.07)
# Chunk 4
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for smaller dataset)",
ylab = "FTE",
main = paste("Plot where blue represents", blue_name , "\n stores and red represents", red_name, "stores."))
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plotTitle <- paste("Plot where blue represents the difference in ", blue_name , "store FTE and red represents the difference in", red_name, "store FTE from March 1992 and December 1992.")
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for the smaller dataset)",
ylab = "FTE",
main = plotTitle)
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plotTitle <- paste("Plot where blue represents the difference in ", blue_name , "store FTE and red represents the difference in", red_name, "store FTE from March 1992 and December 1992.")
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for the smaller dataset)",
ylab = "FTE",
main = plotTitle)
title(
main = plotTitle,
cex.main = 0.5  # You can adjust the value as needed
)
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for the smaller dataset)",
ylab = "FTE")
title(
main = plotTitle,
cex.main = 0.5  # You can adjust the value as needed
)
if(njCounter > pennCounter){
blue_name <- "New Jersey"
red_name <- "Pennsylvania"
} else{
blue_name <- "Pennsylvania"
red_name <- "New Jersey"
}
plot(x = 1,
type = "n",
xlim = c(0, njCounter),
ylim = c(min(njDiffSorted), max(njDiffSorted)),
pch = 16,
xlab = "Store (normalised for the smaller dataset)",
ylab = "FTE")
title(
main = paste("Plot where blue represents the difference in ", blue_name , "store FTE and red represents the difference in", red_name, "store FTE from March 1992 and December 1992."),
cex.main = 0.8  # You can adjust the value as needed
)
if(njCounter > pennCounter){
points(njDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = njCounter, by = njCounter/pennCounter), pennDiffSorted, pch = 16, lwd = 2, col= "red")
} else{
points(pennDiffSorted, pch = 16, lwd = 1, col = "blue")
points(seq(from = 1, to = pennCounter, by = pennCounter/njCounter), njDiffSorted, pch = 16, lwd = 2, col= "red")
}
segments(x0 = 0, y0 = 0, x1 = max(njCounter, pennCounter), y1 = 0)
